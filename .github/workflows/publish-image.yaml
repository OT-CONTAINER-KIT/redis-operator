name: Publish Image to GitHub Container Registry

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  REPOSITORY: ot-container-kit/redis-operator

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Env
        run: |
          echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV        

      - name: Build and Push Operator image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: | 
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/redis-operator:${{ env.TAG }}
            ${{ env.REGISTRY }}/${{ env.REPOSITORY }}/redis-operator:latest
          platforms: linux/amd64,linux/arm64

# name: Release container images
# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - master

# env:
#   APPLICATION_NAME: redis-operator
#   QuayImageName: quay.io/opstree/redis-operator
#   APP_VERSION: "v0.15.2"
#   DOCKERFILE_PATH: './Dockerfile'

# jobs:
#   release_image:
#     if: github.event.pull_request.merged == true
#     runs-on: ubuntu-latest
#     environment: release-image
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2

#     - name: Set up Docker Buildx
#       uses: docker/setup-buildx-action@v2

#     - name: Set up QEMU
#       uses: docker/setup-qemu-action@v3

#     - name: Login to Quay.io
#       uses: docker/login-action@v3
#       with:
#         registry: quay.io
#         username: ${{ secrets.QUAY_USERNAME }}
#         password: ${{ secrets.QUAY_PASSWORD }}

#     - name: Build and push multi-arch latest image
#       uses: docker/build-push-action@v2
#       with:
#         context: .
#         file: ${{ env.DOCKERFILE_PATH }}
#         platforms: linux/amd64,linux/arm64
#         push: true
#         tags: ${{ env.QuayImageName }}:${{ env.APP_VERSION }}, ${{ env.QuayImageName }}:latest

#   trivy_scan:
#     needs: [release_image]
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout
#       uses: actions/checkout@v2
#     - name: Run Trivy vulnerability scanner for arm64 image
#       uses: aquasecurity/trivy-action@master

#     - name: Run Trivy vulnerability scanner for multi-arch image
#       uses: aquasecurity/trivy-action@master
#       with:
#         image-ref: ${{ env.QuayImageName }}:${{ env.APP_VERSION }}
#         format: 'template'
#         template: '@/contrib/sarif.tpl'
#         output: 'trivy-results-latest.sarif'
#         exit-code: '1'
#         ignore-unfixed: true
#         severity: 'CRITICAL,HIGH'
#     - name: Run Trivy vulnerability scanner for latest image
#       uses: aquasecurity/trivy-action@master
#       with:
#         image-ref:  ${{ env.QuayImageName }}:latest
#         format: 'template'
#         template: '@/contrib/sarif.tpl'
#         output: 'trivy-results-latest.sarif'
#         exit-code: '1'
#         ignore-unfixed: true
#         severity: 'CRITICAL,HIGH'