/*
Copyright 2020 Opstree Solutions.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
// Code generated by lister-gen. DO NOT EDIT.

package v1beta2

import (
	v1beta2 "github.com/OT-CONTAINER-KIT/redis-operator/api/v1beta2"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// RedisListLister helps list RedisLists.
// All objects returned here must be treated as read-only.
type RedisListLister interface {
	// List lists all RedisLists in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.RedisList, err error)
	// RedisLists returns an object that can list and get RedisLists.
	RedisLists(namespace string) RedisListNamespaceLister
	RedisListListerExpansion
}

// redisListLister implements the RedisListLister interface.
type redisListLister struct {
	indexer cache.Indexer
}

// NewRedisListLister returns a new RedisListLister.
func NewRedisListLister(indexer cache.Indexer) RedisListLister {
	return &redisListLister{indexer: indexer}
}

// List lists all RedisLists in the indexer.
func (s *redisListLister) List(selector labels.Selector) (ret []*v1beta2.RedisList, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.RedisList))
	})
	return ret, err
}

// RedisLists returns an object that can list and get RedisLists.
func (s *redisListLister) RedisLists(namespace string) RedisListNamespaceLister {
	return redisListNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// RedisListNamespaceLister helps list and get RedisLists.
// All objects returned here must be treated as read-only.
type RedisListNamespaceLister interface {
	// List lists all RedisLists in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1beta2.RedisList, err error)
	// Get retrieves the RedisList from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1beta2.RedisList, error)
	RedisListNamespaceListerExpansion
}

// redisListNamespaceLister implements the RedisListNamespaceLister
// interface.
type redisListNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all RedisLists in the indexer for a given namespace.
func (s redisListNamespaceLister) List(selector labels.Selector) (ret []*v1beta2.RedisList, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1beta2.RedisList))
	})
	return ret, err
}

// Get retrieves the RedisList from the indexer for a given namespace and name.
func (s redisListNamespaceLister) Get(name string) (*v1beta2.RedisList, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1beta2.Resource("redislist"), name)
	}
	return obj.(*v1beta2.RedisList), nil
}
