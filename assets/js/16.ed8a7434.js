(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{377:function(e,t,s){"use strict";s.r(t);var a=s(45),r=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"exposing-redis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exposing-redis"}},[e._v("#")]),e._v(" Exposing Redis")]),e._v(" "),s("p",[e._v('By default, the nature of Redis standalone/cluster setup is private and limited to the Kubernetes cluster only. But we do have a provision to expose it using the Kubernetes "Service" object.\nIf we can expose the service by doing some configuration inside the helm values for redis standalone and cluster setup. This will create another service in parallel to the internal redis service to expose redis.')]),e._v(" "),s("p",[e._v("The service can be exposed with these service types:-")]),e._v(" "),s("ul",[s("li",[s("strong",[e._v("NodePort")]),e._v(": Exposes the Service on each Node's IP at a static port (the NodePort). A ClusterIP Service, to which the NodePort Service routes, is automatically created. You'll be able to contact the NodePort Service, from outside the cluster, by requesting "),s("code",[e._v("<NodeIP>:<NodePort>")]),e._v(".")]),e._v(" "),s("li",[s("strong",[e._v("LoadBalancer")]),e._v(": Exposes the Service externally using a cloud provider's load balancer. NodePort and ClusterIP Services, to which the external load balancer routes, are automatically created.")])]),e._v(" "),s("h2",{attrs:{id:"exposing-service"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exposing-service"}},[e._v("#")]),e._v(" Exposing Service")]),e._v(" "),s("p",[e._v("Customize or create the values file with the following content. The "),s("code",[e._v("externalService")]),e._v(" configuration is a common method of exposing service for redis standalone and cluster setup.")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("externalService")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enabled")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("annotations")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("service.beta.kubernetes.io/aws-load-balancer-internal")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" 0.0.0.0/0\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("serviceType")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" LoadBalancer\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v("\n")])])]),s("p",[e._v("Once the values file is customized or created we can apply or upgrade the redis setup. We need to pass the created file as an argument to the "),s("code",[e._v("helm")]),e._v(" command.")]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# redis standalone")]),e._v("\n$ helm upgrade redis ot-helm/redis -f custom-values.yaml "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n    --install --namespace ot-operators\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# redis cluster")]),e._v("\n$ helm upgrade redis-cluster ot-helm/redis-cluster -f custom-values.yaml "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("\\")]),e._v("\n  --set redisCluster.clusterSize"),s("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("3")]),e._v(" --install --namespace ot-operators\n")])])]),s("p",[e._v("If helm command is completed successfully, we can verify the external service by "),s("code",[e._v("kubectl")]),e._v(' command. As we can see in the output, there is an IP in the "EXTERNAL-IP" coloumn.')]),e._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[e._v("$ kubectl get svc -n ot-operators\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("..")]),e._v(".\nNAME                            TYPE           CLUSTER-IP     EXTERNAL-IP      PORT"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("S"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("                         AGE\nredis-external-service          LoadBalancer   "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.103")]),e._v(".9.171   "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("164.52")]),e._v(".207.101   "),s("span",{pre:!0,attrs:{class:"token number"}},[e._v("6379")]),e._v(":32247/TCP,9121:30708/TCP   4d20h\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);