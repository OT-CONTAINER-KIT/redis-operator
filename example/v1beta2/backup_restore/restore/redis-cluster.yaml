---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisCluster
metadata:
  name: redis-cluster
spec:
  clusterSize: 3
  clusterVersion: v7
  persistenceEnabled: true
  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000
  kubernetesConfig:
    image: quay.io/opstree/redis:v7.0.12
    imagePullPolicy: IfNotPresent
    resources:
      requests:
        cpu: 101m
        memory: 128Mi
      limits:
        cpu: 101m
        memory: 128Mi
    # redisSecret:
    #   name: redis-secret
    #   key: password
    # imagePullSecrets:
    #   - name: regcred
  initContainer:
    enabled: true
    image: quay.io/opstree/redis-operator-restore:latest
    imagePullPolicy: Always
    command: ["/bin/bash", "-c", "/app/restore.bash"]
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 100m
        memory: 128Mi
    env:
      - name: CLUSTER_NAME
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: CLUSTER_NAME
      - name: CLUSTER_NAMESPACE
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: CLUSTER_NAMESPACE
      - name: DEFAULT_FILE_PATH
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: DEFAULT_FILE_PATH
      - name: RESTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: RESTIC_PASSWORD
      - name: RESTIC_CACHE_DIR
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: RESTIC_CACHE_DIR
      - name: BACKUP_DESTINATION
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: BACKUP_DESTINATION
      - name: AWS_S3_BUCKET
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: AWS_S3_BUCKET
      - name: AWS_DEFAULT_REGION
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: AWS_DEFAULT_REGION
      - name: AWS_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: AWS_ACCESS_KEY_ID
      - name: AWS_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: env-secrets
            key: AWS_SECRET_ACCESS_KEY
# Environment Variables for Redis Exporter
    # env:
    # - name: REDIS_EXPORTER_INCL_SYSTEM_METRICS
    #   value: "true"
    # - name: UI_PROPERTIES_FILE_NAME
    #   valueFrom:
    #     configMapKeyRef:
    #       name: game-demo
    #       key: ui_properties_file_name
    # - name: SECRET_USERNAME
    #   valueFrom:
    #     secretKeyRef:
    #       name: mysecret
    #       key: username
#  redisLeader:
#    redisConfig:
#      additionalRedisConfig: redis-external-config
#  redisFollower:
#    redisConfig:
#      additionalRedisConfig: redis-external-config

  redisLeader:
    redisConfig:
      additionalRedisConfig: redis-external-config
  redisFollower:
    redisConfig:
      additionalRedisConfig: redis-external-config
  storage:
    volumeClaimTemplate:
      spec:
        # storageClassName: standard
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
    nodeConfVolume: true
    nodeConfVolumeClaimTemplate:
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
  # nodeSelector:
  #   kubernetes.io/hostname: minikube
  # priorityClassName:
  # Affinity:
  # Tolerations: []
