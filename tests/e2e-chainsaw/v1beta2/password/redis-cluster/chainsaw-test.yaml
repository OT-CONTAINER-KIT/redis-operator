# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json

apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: redis-cluster-password
spec:
  steps:
  - try:
    - apply:
        file: cluster.yaml
    - apply:
        file: secret.yaml
    - assert:
        file: ready-cluster.yaml
    - assert:
        file: ready-sts.yaml
    - assert:
        file: ready-svc.yaml
    - assert:
        file: ready-pvc.yaml
    - assert:
        file: secret.yaml

  - name: Sleep for five minutes
    try:
     - sleep:
         duration: 5m      

  - name: Ping Cluster With Password
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 -a Opstree1234 ping
         check:
          ($stdout=='PONG'): true

  - name: Try saving a key With Password
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 -a Opstree1234 set foo-0 bar-0
         check:
          ($stdout=='OK'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 -a Opstree1234 set foo-1 bar-1
         check:
          ($stdout=='OK'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 -a Opstree1234 set foo-2 bar-2
         check:
          ($stdout=='OK'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 -a Opstree1234 set foo-3 bar-3
         check:
          ($stdout=='OK'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 -a Opstree1234 set foo-4 bar-4
         check:
          ($stdout=='OK'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 -a Opstree1234 set foo-5 bar-5
         check:
          ($stdout=='OK'): true

  - name: Ping Cluster Without Password 
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 ping
         check:
          ($stdout=='NOAUTH Authentication required.'): true

  - name: Try saving a key Without Password
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 set foo-0 bar-0
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 set foo-1 bar-1
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 set foo-2 bar-2
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 set foo-3 bar-3
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 set foo-4 bar-4
         check:
          ($stdout=='NOAUTH Authentication required.'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 set foo-5 bar-5
         check:
          ($stdout=='NOAUTH Authentication required.'): true

  - name: Test Redis Exporter
    try:
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true
      - script:
          timeout: 30s
          content: |
            kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- wget -qO- http://localhost:9121/metrics | grep -v '^#' | grep -E '\bredis_up\b' | awk '{print $2}'
          check:
            ($stdout=='1'): true