---
# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: setup-redis-cluster
spec:
  steps:
    - try:
        - apply:
            file: cluster.yaml
        - apply:
            file: secret.yaml
        - apply:
            file: ../../../../data-assert/resources.yaml
        - assert:
            file: ready-cluster.yaml
        - assert:
            file: ready-sts.yaml
        - assert:
            file: ready-svc.yaml
        - assert:
            file: ready-pvc.yaml
        - assert:
            file: secret.yaml

    - name: Random Check Dynamic Config
      try:
        - script:
            timeout: 30s
            content: |
              #!/bin/bash
              set -e

              # Randomly select one leader and one follower
              LEADER_INDEX=$((RANDOM % 3))
              FOLLOWER_INDEX=$((RANDOM % 3))

              echo "Checking leader-${LEADER_INDEX} and follower-${FOLLOWER_INDEX}"

              # Check leader configuration
              LEADER_CMD="kubectl exec -n ${NAMESPACE} redis-cluster-v1beta2-leader-${LEADER_INDEX}"
              LEADER_CMD="${LEADER_CMD} -c redis-cluster-v1beta2-leader -- redis-cli -a Opstree1234"
              SLOWLOG_VALUE=$(${LEADER_CMD} config get slowlog-log-slower-than | grep -A1 "slowlog-log-slower-than" | tail -n1)
              if [ "$SLOWLOG_VALUE" != "5000" ]; then
                echo "leader-${LEADER_INDEX} slowlog-log-slower-than value is $SLOWLOG_VALUE, expected 5000"
                exit 1
              fi

              # Check follower configuration
              FOLLOWER_CMD="kubectl exec -n ${NAMESPACE} redis-cluster-v1beta2-follower-${FOLLOWER_INDEX}"
              FOLLOWER_CMD="${FOLLOWER_CMD} -c redis-cluster-v1beta2-follower -- redis-cli -a Opstree1234"
              SLOWLOG_VALUE=$(${FOLLOWER_CMD} config get slowlog-log-slower-than | grep -A1 "slowlog-log-slower-than" | tail -n1)
              if [ "$SLOWLOG_VALUE" != "5000" ]; then
                echo "follower-${FOLLOWER_INDEX} slowlog-log-slower-than value is $SLOWLOG_VALUE, expected 5000"
                exit 1
              fi

              echo "Redis instances leader-${LEADER_INDEX} and follower-${FOLLOWER_INDEX} have correct slowlog-log-slower-than configuration"
              exit 0
            check:
              (contains($stdout, 'have correct slowlog-log-slower-than configuration')): true

    - name: Put data
      try:
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container data-assert data-assert --
              bash -c  "cd /go/src/data-assert && go run main.go gen-redis-data --host redis-cluster-v1beta2-leader.${NAMESPACE}.svc.cluster.local:6379 --mode cluster --password Opstree1234"
            check:
              (contains($stdout, 'OK')): true

    - name: Scale Out Redis Cluster
      try:
        - apply:
            file: cluster-scale-out.yaml

    - name: Check Status 00
      try:
        - assert:
            file: cluster-scale-out-status-00.yaml

    - name: Check Status 01
      try:
        - assert:
            file: cluster-scale-out-status-01.yaml

    - name: Check Status 02
      try:
        - assert:
            file: cluster-scale-out-status-02.yaml

    - name: Check Status 03
      try:
        - assert:
            file: cluster-scale-out-status-03.yaml

    - name: Assert data
      try:
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container data-assert data-assert --
              bash -c "cd /go/src/data-assert && go run main.go chk-redis-data --host redis-cluster-v1beta2-leader.${NAMESPACE}.svc.cluster.local:6379 --mode cluster --password Opstree1234"
            check:
              (contains($stdout, 'OK')): true

    - name: Scale In Redis Cluster
      try:
        - apply:
            file: cluster.yaml
        - assert:
            file: ready-cluster.yaml

    - name: Assert data
      try:
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container data-assert data-assert --
              bash -c "cd /go/src/data-assert && go run main.go chk-redis-data --host redis-cluster-v1beta2-leader.${NAMESPACE}.svc.cluster.local:6379 --mode cluster --password Opstree1234"
            check:
              (contains($stdout, 'OK')): true

    - name: redis-cluster-uninstall
      try:
        - delete:
            ref:
              name: redis-cluster-v1beta2
              kind: RedisCluster
              apiVersion: redis.redis.opstreelabs.in/v1beta2
        - error:
            file: ready-cluster.yaml
        - error:
            file: ready-sts.yaml
        - error:
            file: ready-svc.yaml
        - error:
            file: ready-pvc.yaml
