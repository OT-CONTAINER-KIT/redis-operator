# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json

apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: redis-replication-setup
spec:
  steps:
  - try:
    - apply:
        file: replication.yaml
    - assert:
        file: ready-sts.yaml
    - assert:
        file: ready-svc.yaml
    - assert:
        file: ready-pvc.yaml
    catch:
      - description: Redis Operator Logs
        podLogs:
            namespace: redis-operator-system
            selector: control-plane=redis-operator
            container: manager
            tail: -1 # tail all logs

  - name: Ping Replicated Cluster
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} redis-replication-0 -- redis-cli -p 6379 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} redis-replication-1 -- redis-cli -p 6379 ping
         check:
          ($stdout=='PONG'): true
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} redis-replication-2 -- redis-cli -p 6379 ping
         check:
          ($stdout=='PONG'): true

  - name: Try saving a key
    try:
     - script:
         timeout: 10s
         content: |
          kubectl exec --namespace ${NAMESPACE} redis-replication-0 -- redis-cli -p 6379 set foo-0 bar-0
         check:
          ($stdout=='OK'): true

  - name: Check Status
    try:
      - script:
          timeout: 10s
          content: |
            kubectl --namespace ${NAMESPACE} get redisreplications.v1beta2.redis.redis.opstreelabs.in redis-replication -o jsonpath='{.status.masterNode}'
          check:
            # by default, we select the first node as master
            ($stdout=='redis-replication-0'): true