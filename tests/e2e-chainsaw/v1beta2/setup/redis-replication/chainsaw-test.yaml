---
# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: setup-redis-replication
spec:
  steps:
    - try:
        - apply:
            file: replication.yaml
        - apply:
            file: secret.yaml
        - assert:
            file: ready-sts.yaml
        - assert:
            file: ready-svc.yaml
        - assert:
            file: ready-pvc.yaml
        - assert:
            file: ready-replication.yaml
        - assert:
            file: secret.yaml

    - name: Check maxmemory
      try:
        - script:
            timeout: 30s
            content: |
              #!/bin/bash
              set -e

              # maxmemory should not equal to 0
              MAXMEMORY=$(kubectl exec -n ${NAMESPACE} redis-replication-0 -c redis-replication -- redis-cli --no-auth-warning -a Opstree1234 config get maxmemory | grep -A1 "maxmemory" | tail -n1)
              if [ "$MAXMEMORY" == "0" ]; then
                echo "maxmemory value is $MAXMEMORY, expected not 0"
                exit 1
              fi
              exit 0

    - name: Ping Replicated Cluster
      try:
        - script:
            timeout: 10s
            content: |
              kubectl exec --namespace ${NAMESPACE} redis-replication-0 -- redis-cli -p 6379 -a Opstree1234 ping
            check:
              (contains($stdout, 'PONG')): true

    - name: Try saving a key
      try:
        - script:
            timeout: 10s
            content: |
              kubectl exec --namespace ${NAMESPACE} redis-replication-0 -- redis-cli -p 6379  -a Opstree1234 set foo-0 bar-0
            check:
              (contains($stdout, 'OK')): true

    - name: Resize pvc
      try:
        - script:
            timeout: 10s
            content: |
              PATCH_DATA='[{"op": "replace", "path": "/spec/storage/volumeClaimTemplate/spec/resources/requests/storage", "value": "2Gi"}]'
              kubectl patch redisreplication redis-replication --namespace ${NAMESPACE} --type='json' -p="${PATCH_DATA}"
        - assert:
            timeout: 300s
            file: ready-pvc-resized.yaml

    - name: redis-replication-uninstall
      description: Uninstall Redis Replication
      try:
        - delete:
            ref:
              name: redis-replication
              kind: RedisReplication
              apiVersion: redis.redis.opstreelabs.in/v1beta2
        - error:
            file: ready-sts.yaml
        - error:
            file: ready-svc.yaml
        - error:
            file: ready-pvc.yaml
