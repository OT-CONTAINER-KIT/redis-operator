# This is a test for redis-ha(redis-replication and redis-sentinel)
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-replication-password
type: Opaque
data:
  # Opstree@1234replication
  password: T3BzdHJlZUAxMjM0cmVwbGljYXRpb24=
---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisReplication
metadata:
  name: redis-replication
spec:
  TLS:
    ca: ca.crt
    cert: tls.crt
    key: tls.key
    secret:
      secretName: redis-tls-cert
  clusterSize: 3
  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000
  kubernetesConfig:
    redisSecret:
      name: redis-replication-password
      key: password
    image: quay.io/opstree/redis:latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 101m
        memory: 128Mi
      limits:
        cpu: 101m
        memory: 128Mi
  storage:
    volumeClaimTemplate:
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 1Gi
---
apiVersion: v1
kind: Secret
metadata:
  name: redis-sentinel-password
type: Opaque
data:
  # Opstree@1234sentinel
  password: T3BzdHJlZUAxMjM0c2VudGluZWw=
---
apiVersion: redis.redis.opstreelabs.in/v1beta2
kind: RedisSentinel
metadata:
  name: redis-sentinel
spec:
  TLS:
    ca: ca.crt
    cert: tls.crt
    key: tls.key
    secret:
      secretName: redis-tls-cert
  clusterSize: 1
  podSecurityContext:
    runAsUser: 1000
    fsGroup: 1000
  redisSentinelConfig:
    resolveHostnames: "yes"
    announceHostnames: "yes"
    redisReplicationName: redis-replication
    quorum: '1'
    failoverTimeout: '10000'
    redisReplicationPassword:
      secretKeyRef:
        name: redis-replication-password
        key: password
  kubernetesConfig:
    redisSecret:
      name: redis-sentinel-password
      key: password
    image: quay.io/opstree/redis-sentinel:latest
    imagePullPolicy: Always
    resources:
      requests:
        cpu: 101m
        memory: 128Mi
      limits:
        cpu: 101m
        memory: 128Mi
