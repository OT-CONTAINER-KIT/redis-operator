---
# yaml-language-server: $schema=https://raw.githubusercontent.com/kyverno/chainsaw/main/.schemas/json/test-chainsaw-v1alpha1.json
apiVersion: chainsaw.kyverno.io/v1alpha1
kind: Test
metadata:
  name: redis-cluster
spec:
  steps:
    - try:
        - apply:
            file: cluster.yaml
        - assert:
            file: ready-cluster.yaml

    - name: Try saving a key
      try:
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 set foo-0 bar-0
            check:
              ($stdout=='OK'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 set foo-1 bar-1
            check:
              ($stdout=='OK'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 set foo-2 bar-2
            check:
              ($stdout=='OK'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 set foo-3 bar-3
            check:
              ($stdout=='OK'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 set foo-4 bar-4
            check:
              ($stdout=='OK'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 set foo-5 bar-5
            check:
              ($stdout=='OK'): true

    - name: Rolling update the cluster
      try:
        - apply:
            file: cluster-hscale.yaml
        - assert:
            file: ready-cluster.yaml

    - name: Check if all keys exist
      try:
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-0 -- redis-cli -c -p 6379 get foo-0
            check:
              ($stdout=='bar-0'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-1 -- redis-cli -c -p 6379 get foo-1
            check:
              ($stdout=='bar-1'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-leader redis-cluster-v1beta2-leader-2 -- redis-cli -c -p 6379 get foo-2
            check:
              ($stdout=='bar-2'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-0 -- redis-cli -c -p 6379 get foo-3
            check:
              ($stdout=='bar-3'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-1 -- redis-cli -c -p 6379 get foo-4
            check:
              ($stdout=='bar-4'): true
        - script:
            timeout: 30s
            content: >
              kubectl exec --namespace ${NAMESPACE} --container redis-cluster-v1beta2-follower redis-cluster-v1beta2-follower-2 -- redis-cli -c -p 6379 get foo-5
            check:
              ($stdout=='bar-5'): true
