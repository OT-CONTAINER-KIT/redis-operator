---
redisOperator:
  name: redis-operator
  imageName: ghcr.io/ot-container-kit/redis-operator/redis-operator
  # Overrides the image tag whose default is the chart appVersion.
  imageTag: ""
  imagePullPolicy: Always
  imagePullSecrets: []

  # Additional pod annotations
  podAnnotations: {}
  # Additional Pod labels (e.g. for filtering Pod by custom labels)
  podLabels: {}

  # Additional arguments for redis-operator container
  extraArgs: []
  # When not specified, the operator will watch all namespaces. It can be set to a specific namespace or multiple namespaces separated by commas.
  watchNamespace: ""
  env: []
  # If set to true, webhook server will be enabled for masterSlaveAntiAffinity feature
  # When enabled, you need to either:
  # 1. Enable cert-manager (certmanager.enabled=true) for automatic certificate management, or
  # 2. Manually create a certificate secret (see "How to generate private key" section in README)
  webhook: false
  automountServiceAccountToken: true


resources:
  limits:
    cpu: 500m
    memory: 500Mi
  requests:
    cpu: 500m
    memory: 500Mi

replicas: 1

rbac:
  enabled: true
serviceAccountName: redis-operator

serviceAccount:
  automountServiceAccountToken: true

service:
  name: webhook-service
  namespace: redis-operator

certificate:
  name: serving-cert
  secretName: webhook-server-cert

issuer:
  type: selfSigned
  name: redis-operator-issuer
  email: shubham.gupta@opstree.com
  server: https://acme-v02.api.letsencrypt.org/directory
  privateKeySecretName: letsencrypt-prod
  solver:
    enabled: true
    ingressClass: nginx

certmanager:
  # Whether to use cert-manager for certificate management
  # Only effective when webhook=true
  # If webhook=true and certmanager.enabled=false, you need to manually create certificate secret
  enabled: false
  # API version of the cert-manager CRDs
  apiVersion: "cert-manager.io/v1"

priorityClassName: ""
nodeSelector: {}
tolerateAllTaints: false
tolerations: []
affinity: {}

podSecurityContext: {}
#  fsGroup: 2000

securityContext: {}
#  capabilities:
#    drop:
#    - ALL
#  readOnlyRootFilesystem: true
#  runAsNonRoot: true
#  runAsUser: 1000
